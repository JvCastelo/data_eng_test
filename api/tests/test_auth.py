#!/usr/bin/env python3
"""
Script de teste para a autentica√ß√£o por API Key.
Execute este script ap√≥s iniciar o servidor com: uvicorn main:app --reload
"""

import requests

# Configura√ß√£o
BASE_URL = "http://localhost:8000"
API_KEY = "bxaVbYE34pBWA5jDE5X3RPazdkXLZvDcwUdCQbyhxmM"  # Use a API key criada


def test_auth():
    """Testa a autentica√ß√£o da API"""

    headers = {"Authorization": f"Bearer {API_KEY}", "Content-Type": "application/json"}

    print("üîê Testando autentica√ß√£o da API...")
    print(f"URL Base: {BASE_URL}")
    print(f"API Key: {API_KEY}")
    print("-" * 50)

    # 1. Verificar API Key
    print("1. Verificando API Key...")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/auth/verify", headers=headers)
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ API Key v√°lida!")
            print(f"   Usu√°rio: {data['username']} (ID: {data['user_id']})")
            print(f"   Mensagem: {data['message']}")
        else:
            print(f"‚ùå Erro: {response.status_code} - {response.text}")
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")

    print()

    # 2. Testar endpoint protegido (campos)
    print("2. Testando endpoint protegido (campos)...")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/data/fields", headers=headers)
        if response.status_code == 200:
            fields = response.json()
            print("‚úÖ Campos obtidos com sucesso!")
            print(f"   Campos dispon√≠veis: {fields}")
        else:
            print(f"‚ùå Erro: {response.status_code} - {response.text}")
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")

    print()

    # 3. Testar sem autentica√ß√£o (deve falhar)
    print("3. Testando sem autentica√ß√£o (deve falhar)...")
    try:
        response = requests.get(f"{BASE_URL}/api/v1/data/fields")
        if response.status_code == 401:
            print("‚úÖ Autentica√ß√£o obrigat√≥ria funcionando!")
            print(f"   Erro esperado: {response.json()}")
        else:
            print(f"‚ùå Erro inesperado: {response.status_code} - {response.text}")
    except Exception as e:
        print(f"‚ùå Erro de conex√£o: {e}")

    print()
    print("üéâ Teste de autentica√ß√£o conclu√≠do!")


if __name__ == "__main__":
    test_auth()
